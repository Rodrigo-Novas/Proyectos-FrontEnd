*{
    margin: 0px;
    padding: 0px;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}


body{
    background: #f2f2f2;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif
}

/*Padre e hijo*/
.contenedor{
    width: 80%;
    max-width: 70%;
    background: #212d40;
    display: flex; /*Con esto le digo a css que habilite flexbox*/
    flex-direction: row; /*Esto me posiciona las cajas de los contenedores hijos como filas*/
    flex-wrap: wrap; /*Lo que hace es colocar dinamicamente los hijos si por ejemplo algun hijo se desfaza del widht permitido lo va a colocar abajo*/
    justify-content: center; /*Centra todos los elementos*/
    align-items: flex-end;/*coloca los elementos al final en eje y*/
    /*align-items: flex-end; arrastra hasta el final de la caja padre los hijos (los alarga)*/
    /*justify-content: space-between; /*coloca los elementos de forma correcta colocando los espacios sobrantes entre ellos*/
    /*justify-content: flex-end; /*Arrastra los elementos hasta la derecha en el eje x*/
    /*flex-flow: row wrap; es la mezlca resumida del wrap y del direction */
    /*flex-direction: column; Esto me posiciona las cajas como columnas de los contenedores hijos*/
    /*flex-direction: column-reverse; existe tambien el column reverse y el row reverse que dan vuelta los hijos*/

}


.caja{
    width: 100px;
    height: 100px;
    background: #f57e3a;
    text-align: center;
    margin: 20px;
    padding: 40px;
    color: #ffff; 
    order: 1; /*Te da un orden especifico en este caso es el 1*/
    /*flex-grow: 1;lo que hace en este caso es ocupar todo el espacio dispoible*/

}

.uno
{
order: 1; /*Puedo modificar el orden por ejemplo si aca pusiera 4 este elemento se colocaria en la posicion 4*/

}


.dos
{
order: 2;

}


.tres
{
order: 3;

}

.cuatro
{
order: 4;

}